#!/bin/bash
# -*- coding: utf-8 -*-
# Author: PÃ¤r Andersson (National Supercomputer Centre, Sweden)
# Version: 0.3 2007-07-30
#
# 2011-06-23: Joerg Bornschein <bornschein@fias.uni-frankfurt.de>
#   Make this script find its own path
#
# This will submit a batch script that starts screen on a node.
# Then ssh is used to connect to the node and attach the screen.
# The result is very similar to an interactive shell in PBS
# (qsub -I)

set -e

MYDIR="$( dirname "$( readlink -f "${BASH_SOURCE[0]}" )" )"

# Batch Script that starts SCREEN
BS="${MYDIR}/_interactive"
# Interactive screen script
IS="${MYDIR}/_interactive_screen"

echo "=*~-  Please enter your resource requirements.  -~*="
echo " "
read -e -p "How many CPU cores? :: " -i "2" REQCPU
read -e -p "How much memory (in MB)? :: " -i "8192" REQMEM
read -e -p "How many hours do you need? :: " -i "24" REQTIME
read -e -p "What QOS? :: " -i "free" QOS
read -e -p "What partition? :: " -i "work" PARTITION

echo " "
echo "Spawning job with the following resources:"
echo "     Processors: ${REQCPU}"
echo "         Memory: ${REQMEM}"
echo "  Runtime limit: ${REQTIME}"
echo "            QOS: ${QOS}"
echo "      Partition: ${PARTITION}"
echo " "

# Submit the job and get the job id
JOB="$( sbatch --cpus-per-task="${REQCPU}" --mem="${REQMEM}" \
    --time="${REQTIME}" --qos="${QOS}" --partition="${PARTITION}"\
    --output=/dev/null --error=/dev/null "$@" "${BS}" \
    |& egrep -o -e "\b[0-9]+$" )"

# Make sure the job is always canceled
# Relying on $PATH for scancel
trap "{ scancel -q "${JOB}"; exit; }" SIGINT SIGTERM EXIT

echo "Waiting for JOBID ${JOB} to start"
while : ; do
    sleep 1s

    # Check job status
    STATUS="$( squeue -j "${JOB}" -t PD,R -h -o %t )"

    if [[ "${STATUS}" = "R" ]]; then
        # Job is running, break the while loop
        break
    elif [[ "${STATUS}" != "PD" ]]; then
        echo "Job is not Running or Pending. Aborting"
        scancel "${JOB}"
        exit 1
    fi

    echo -n "."
done

# Determine the first node in the job:
NODE="$( srun --jobid="${JOB}" -N1 hostname )"

# SSH to the node and attach the screen

sleep 1s

ssh -X -o StrictHostKeyChecking=no -c arcfour -C \
    -t "${NODE}" "${IS}" "slurm${JOB}"

# The trap will now cancel the job before exiting.
